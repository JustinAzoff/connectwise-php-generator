<?php

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Library\Models;

use \ArrayAccess;
/**
 * Survey Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Spinen\ConnectWise\Library
 */
class Survey implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'name' => 'string',
        'inactive_flag' => 'bool',
        'header_include_logo_flag' => 'bool',
        'header_text' => 'string',
        'header_text_visible_flag' => 'bool',
        'footer_text' => 'string',
        'footer_text_visible_flag' => 'bool',
        'thank_you_text' => 'string',
        'notify_who' => '\Spinen\ConnectWise\Library\Models\GenericIdIdentifierReference',
        'notify_who_visible_flag' => 'bool',
        'notify_member' => '\Spinen\ConnectWise\Library\Models\MemberReference',
        '_info' => '\Spinen\ConnectWise\Library\Models\Metadata'
    );

    /**
      * Array of attributes where the key is the local name, and the value is the original name
      *
      * @var string[]
      */
    static $attributeMap = array(
        'id' => 'id',
        'name' => 'name',
        'inactive_flag' => 'inactiveFlag',
        'header_include_logo_flag' => 'headerIncludeLogoFlag',
        'header_text' => 'headerText',
        'header_text_visible_flag' => 'headerTextVisibleFlag',
        'footer_text' => 'footerText',
        'footer_text_visible_flag' => 'footerTextVisibleFlag',
        'thank_you_text' => 'thankYouText',
        'notify_who' => 'notifyWho',
        'notify_who_visible_flag' => 'notifyWhoVisibleFlag',
        'notify_member' => 'notifyMember',
        '_info' => '_info'
    );

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      *
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'name' => 'setName',
        'inactive_flag' => 'setInactiveFlag',
        'header_include_logo_flag' => 'setHeaderIncludeLogoFlag',
        'header_text' => 'setHeaderText',
        'header_text_visible_flag' => 'setHeaderTextVisibleFlag',
        'footer_text' => 'setFooterText',
        'footer_text_visible_flag' => 'setFooterTextVisibleFlag',
        'thank_you_text' => 'setThankYouText',
        'notify_who' => 'setNotifyWho',
        'notify_who_visible_flag' => 'setNotifyWhoVisibleFlag',
        'notify_member' => 'setNotifyMember',
        '_info' => 'setInfo'
    );

    /**
      * Array of attributes to getter functions (for serialization of requests)
      *
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'name' => 'getName',
        'inactive_flag' => 'getInactiveFlag',
        'header_include_logo_flag' => 'getHeaderIncludeLogoFlag',
        'header_text' => 'getHeaderText',
        'header_text_visible_flag' => 'getHeaderTextVisibleFlag',
        'footer_text' => 'getFooterText',
        'footer_text_visible_flag' => 'getFooterTextVisibleFlag',
        'thank_you_text' => 'getThankYouText',
        'notify_who' => 'getNotifyWho',
        'notify_who_visible_flag' => 'getNotifyWhoVisibleFlag',
        'notify_member' => 'getNotifyMember',
        '_info' => 'getInfo'
    );

    
    /**
      * $id 
      *
      * @var int
      */
    protected $id;
    
    /**
      * $name 
      *
      * @var string
      */
    protected $name;
    
    /**
      * $inactive_flag 
      *
      * @var bool
      */
    protected $inactive_flag;
    
    /**
      * $header_include_logo_flag 
      *
      * @var bool
      */
    protected $header_include_logo_flag;
    
    /**
      * $header_text 
      *
      * @var string
      */
    protected $header_text;
    
    /**
      * $header_text_visible_flag 
      *
      * @var bool
      */
    protected $header_text_visible_flag;
    
    /**
      * $footer_text 
      *
      * @var string
      */
    protected $footer_text;
    
    /**
      * $footer_text_visible_flag 
      *
      * @var bool
      */
    protected $footer_text_visible_flag;
    
    /**
      * $thank_you_text 
      *
      * @var string
      */
    protected $thank_you_text;
    
    /**
      * $notify_who 
      *
      * @var \Spinen\ConnectWise\Library\Models\GenericIdIdentifierReference
      */
    protected $notify_who;
    
    /**
      * $notify_who_visible_flag 
      *
      * @var bool
      */
    protected $notify_who_visible_flag;
    
    /**
      * $notify_member 
      *
      * @var \Spinen\ConnectWise\Library\Models\MemberReference
      */
    protected $notify_member;
    
    /**
      * $_info 
      *
      * @var \Spinen\ConnectWise\Library\Models\Metadata
      */
    protected $_info;
    

    /**
     * New instance of Survey.
     *
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->name = $data["name"];
            $this->inactive_flag = $data["inactive_flag"];
            $this->header_include_logo_flag = $data["header_include_logo_flag"];
            $this->header_text = $data["header_text"];
            $this->header_text_visible_flag = $data["header_text_visible_flag"];
            $this->footer_text = $data["footer_text"];
            $this->footer_text_visible_flag = $data["footer_text_visible_flag"];
            $this->thank_you_text = $data["thank_you_text"];
            $this->notify_who = $data["notify_who"];
            $this->notify_who_visible_flag = $data["notify_who_visible_flag"];
            $this->notify_member = $data["notify_member"];
            $this->_info = $data["_info"];
        }
    }
    
    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id
     *
     * @param int $id 
     *
     * @return $this
     */
    public function setId($id)
    { 
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name
     *
     * @param string $name 
     *
     * @return $this
     */
    public function setName($name)
    { 
        $this->name = $name;
        return $this;
    }
    
    /**
     * Gets inactive_flag
     *
     * @return bool
     */
    public function getInactiveFlag()
    {
        return $this->inactive_flag;
    }

    /**
     * Sets inactive_flag
     *
     * @param bool $inactive_flag 
     *
     * @return $this
     */
    public function setInactiveFlag($inactive_flag)
    { 
        $this->inactive_flag = $inactive_flag;
        return $this;
    }
    
    /**
     * Gets header_include_logo_flag
     *
     * @return bool
     */
    public function getHeaderIncludeLogoFlag()
    {
        return $this->header_include_logo_flag;
    }

    /**
     * Sets header_include_logo_flag
     *
     * @param bool $header_include_logo_flag 
     *
     * @return $this
     */
    public function setHeaderIncludeLogoFlag($header_include_logo_flag)
    { 
        $this->header_include_logo_flag = $header_include_logo_flag;
        return $this;
    }
    
    /**
     * Gets header_text
     *
     * @return string
     */
    public function getHeaderText()
    {
        return $this->header_text;
    }

    /**
     * Sets header_text
     *
     * @param string $header_text 
     *
     * @return $this
     */
    public function setHeaderText($header_text)
    { 
        $this->header_text = $header_text;
        return $this;
    }
    
    /**
     * Gets header_text_visible_flag
     *
     * @return bool
     */
    public function getHeaderTextVisibleFlag()
    {
        return $this->header_text_visible_flag;
    }

    /**
     * Sets header_text_visible_flag
     *
     * @param bool $header_text_visible_flag 
     *
     * @return $this
     */
    public function setHeaderTextVisibleFlag($header_text_visible_flag)
    { 
        $this->header_text_visible_flag = $header_text_visible_flag;
        return $this;
    }
    
    /**
     * Gets footer_text
     *
     * @return string
     */
    public function getFooterText()
    {
        return $this->footer_text;
    }

    /**
     * Sets footer_text
     *
     * @param string $footer_text 
     *
     * @return $this
     */
    public function setFooterText($footer_text)
    { 
        $this->footer_text = $footer_text;
        return $this;
    }
    
    /**
     * Gets footer_text_visible_flag
     *
     * @return bool
     */
    public function getFooterTextVisibleFlag()
    {
        return $this->footer_text_visible_flag;
    }

    /**
     * Sets footer_text_visible_flag
     *
     * @param bool $footer_text_visible_flag 
     *
     * @return $this
     */
    public function setFooterTextVisibleFlag($footer_text_visible_flag)
    { 
        $this->footer_text_visible_flag = $footer_text_visible_flag;
        return $this;
    }
    
    /**
     * Gets thank_you_text
     *
     * @return string
     */
    public function getThankYouText()
    {
        return $this->thank_you_text;
    }

    /**
     * Sets thank_you_text
     *
     * @param string $thank_you_text 
     *
     * @return $this
     */
    public function setThankYouText($thank_you_text)
    { 
        $this->thank_you_text = $thank_you_text;
        return $this;
    }
    
    /**
     * Gets notify_who
     *
     * @return \Spinen\ConnectWise\Library\Models\GenericIdIdentifierReference
     */
    public function getNotifyWho()
    {
        return $this->notify_who;
    }

    /**
     * Sets notify_who
     *
     * @param \Spinen\ConnectWise\Library\Models\GenericIdIdentifierReference $notify_who 
     *
     * @return $this
     */
    public function setNotifyWho($notify_who)
    { 
        $this->notify_who = $notify_who;
        return $this;
    }
    
    /**
     * Gets notify_who_visible_flag
     *
     * @return bool
     */
    public function getNotifyWhoVisibleFlag()
    {
        return $this->notify_who_visible_flag;
    }

    /**
     * Sets notify_who_visible_flag
     *
     * @param bool $notify_who_visible_flag 
     *
     * @return $this
     */
    public function setNotifyWhoVisibleFlag($notify_who_visible_flag)
    { 
        $this->notify_who_visible_flag = $notify_who_visible_flag;
        return $this;
    }
    
    /**
     * Gets notify_member
     *
     * @return \Spinen\ConnectWise\Library\Models\MemberReference
     */
    public function getNotifyMember()
    {
        return $this->notify_member;
    }

    /**
     * Sets notify_member
     *
     * @param \Spinen\ConnectWise\Library\Models\MemberReference $notify_member 
     *
     * @return $this
     */
    public function setNotifyMember($notify_member)
    { 
        $this->notify_member = $notify_member;
        return $this;
    }
    
    /**
     * Gets _info
     *
     * @return \Spinen\ConnectWise\Library\Models\Metadata
     */
    public function getInfo()
    {
        return $this->_info;
    }

    /**
     * Sets _info
     *
     * @param \Spinen\ConnectWise\Library\Models\Metadata $_info 
     *
     * @return $this
     */
    public function setInfo($_info)
    { 
        $this->_info = $_info;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param  integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }

    /**
     * Gets offset.
     *
     * @param  integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }

    /**
     * Sets value based on offset.
     *
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }

    /**
     * Unsets offset.
     *
     * @param  integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
