<?php

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Library\Models;

use \ArrayAccess;
/**
 * SurveyResult Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Spinen\ConnectWise\Library
 */
class SurveyResult implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    static $swaggerTypes = array(
        'id' => 'int',
        'ticket_id' => 'int',
        'email_address' => 'string',
        'footer_response' => 'string',
        'contact_me_flag' => 'bool',
        'contact' => '\Spinen\ConnectWise\Library\Models\ContactReference',
        'results' => '\Spinen\ConnectWise\Library\Models\SurveyResultDetail[]',
        'total_points' => 'int',
        'company' => '\Spinen\ConnectWise\Library\Models\CompanyReference',
        'survey_id' => 'int',
        '_info' => '\Spinen\ConnectWise\Library\Models\Metadata'
    );

    /**
      * Array of attributes where the key is the local name, and the value is the original name
      *
      * @var string[]
      */
    static $attributeMap = array(
        'id' => 'id',
        'ticket_id' => 'ticketId',
        'email_address' => 'emailAddress',
        'footer_response' => 'footerResponse',
        'contact_me_flag' => 'contactMeFlag',
        'contact' => 'contact',
        'results' => 'results',
        'total_points' => 'totalPoints',
        'company' => 'company',
        'survey_id' => 'surveyId',
        '_info' => '_info'
    );

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      *
      * @var string[]
      */
    static $setters = array(
        'id' => 'setId',
        'ticket_id' => 'setTicketId',
        'email_address' => 'setEmailAddress',
        'footer_response' => 'setFooterResponse',
        'contact_me_flag' => 'setContactMeFlag',
        'contact' => 'setContact',
        'results' => 'setResults',
        'total_points' => 'setTotalPoints',
        'company' => 'setCompany',
        'survey_id' => 'setSurveyId',
        '_info' => 'setInfo'
    );

    /**
      * Array of attributes to getter functions (for serialization of requests)
      *
      * @var string[]
      */
    static $getters = array(
        'id' => 'getId',
        'ticket_id' => 'getTicketId',
        'email_address' => 'getEmailAddress',
        'footer_response' => 'getFooterResponse',
        'contact_me_flag' => 'getContactMeFlag',
        'contact' => 'getContact',
        'results' => 'getResults',
        'total_points' => 'getTotalPoints',
        'company' => 'getCompany',
        'survey_id' => 'getSurveyId',
        '_info' => 'getInfo'
    );

    
    /**
      * $id 
      *
      * @var int
      */
    protected $id;
    
    /**
      * $ticket_id 
      *
      * @var int
      */
    protected $ticket_id;
    
    /**
      * $email_address 
      *
      * @var string
      */
    protected $email_address;
    
    /**
      * $footer_response 
      *
      * @var string
      */
    protected $footer_response;
    
    /**
      * $contact_me_flag 
      *
      * @var bool
      */
    protected $contact_me_flag;
    
    /**
      * $contact 
      *
      * @var \Spinen\ConnectWise\Library\Models\ContactReference
      */
    protected $contact;
    
    /**
      * $results 
      *
      * @var \Spinen\ConnectWise\Library\Models\SurveyResultDetail[]
      */
    protected $results;
    
    /**
      * $total_points 
      *
      * @var int
      */
    protected $total_points;
    
    /**
      * $company 
      *
      * @var \Spinen\ConnectWise\Library\Models\CompanyReference
      */
    protected $company;
    
    /**
      * $survey_id 
      *
      * @var int
      */
    protected $survey_id;
    
    /**
      * $_info 
      *
      * @var \Spinen\ConnectWise\Library\Models\Metadata
      */
    protected $_info;
    

    /**
     * New instance of SurveyResult.
     *
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        if ($data != null) {
            $this->id = $data["id"];
            $this->ticket_id = $data["ticket_id"];
            $this->email_address = $data["email_address"];
            $this->footer_response = $data["footer_response"];
            $this->contact_me_flag = $data["contact_me_flag"];
            $this->contact = $data["contact"];
            $this->results = $data["results"];
            $this->total_points = $data["total_points"];
            $this->company = $data["company"];
            $this->survey_id = $data["survey_id"];
            $this->_info = $data["_info"];
        }
    }
    
    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Sets id
     *
     * @param int $id 
     *
     * @return $this
     */
    public function setId($id)
    { 
        $this->id = $id;
        return $this;
    }
    
    /**
     * Gets ticket_id
     *
     * @return int
     */
    public function getTicketId()
    {
        return $this->ticket_id;
    }

    /**
     * Sets ticket_id
     *
     * @param int $ticket_id 
     *
     * @return $this
     */
    public function setTicketId($ticket_id)
    { 
        $this->ticket_id = $ticket_id;
        return $this;
    }
    
    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->email_address;
    }

    /**
     * Sets email_address
     *
     * @param string $email_address 
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    { 
        $this->email_address = $email_address;
        return $this;
    }
    
    /**
     * Gets footer_response
     *
     * @return string
     */
    public function getFooterResponse()
    {
        return $this->footer_response;
    }

    /**
     * Sets footer_response
     *
     * @param string $footer_response 
     *
     * @return $this
     */
    public function setFooterResponse($footer_response)
    { 
        $this->footer_response = $footer_response;
        return $this;
    }
    
    /**
     * Gets contact_me_flag
     *
     * @return bool
     */
    public function getContactMeFlag()
    {
        return $this->contact_me_flag;
    }

    /**
     * Sets contact_me_flag
     *
     * @param bool $contact_me_flag 
     *
     * @return $this
     */
    public function setContactMeFlag($contact_me_flag)
    { 
        $this->contact_me_flag = $contact_me_flag;
        return $this;
    }
    
    /**
     * Gets contact
     *
     * @return \Spinen\ConnectWise\Library\Models\ContactReference
     */
    public function getContact()
    {
        return $this->contact;
    }

    /**
     * Sets contact
     *
     * @param \Spinen\ConnectWise\Library\Models\ContactReference $contact 
     *
     * @return $this
     */
    public function setContact($contact)
    { 
        $this->contact = $contact;
        return $this;
    }
    
    /**
     * Gets results
     *
     * @return \Spinen\ConnectWise\Library\Models\SurveyResultDetail[]
     */
    public function getResults()
    {
        return $this->results;
    }

    /**
     * Sets results
     *
     * @param \Spinen\ConnectWise\Library\Models\SurveyResultDetail[] $results 
     *
     * @return $this
     */
    public function setResults($results)
    { 
        $this->results = $results;
        return $this;
    }
    
    /**
     * Gets total_points
     *
     * @return int
     */
    public function getTotalPoints()
    {
        return $this->total_points;
    }

    /**
     * Sets total_points
     *
     * @param int $total_points 
     *
     * @return $this
     */
    public function setTotalPoints($total_points)
    { 
        $this->total_points = $total_points;
        return $this;
    }
    
    /**
     * Gets company
     *
     * @return \Spinen\ConnectWise\Library\Models\CompanyReference
     */
    public function getCompany()
    {
        return $this->company;
    }

    /**
     * Sets company
     *
     * @param \Spinen\ConnectWise\Library\Models\CompanyReference $company 
     *
     * @return $this
     */
    public function setCompany($company)
    { 
        $this->company = $company;
        return $this;
    }
    
    /**
     * Gets survey_id
     *
     * @return int
     */
    public function getSurveyId()
    {
        return $this->survey_id;
    }

    /**
     * Sets survey_id
     *
     * @param int $survey_id 
     *
     * @return $this
     */
    public function setSurveyId($survey_id)
    { 
        $this->survey_id = $survey_id;
        return $this;
    }
    
    /**
     * Gets _info
     *
     * @return \Spinen\ConnectWise\Library\Models\Metadata
     */
    public function getInfo()
    {
        return $this->_info;
    }

    /**
     * Sets _info
     *
     * @param \Spinen\ConnectWise\Library\Models\Metadata $_info 
     *
     * @return $this
     */
    public function setInfo($_info)
    { 
        $this->_info = $_info;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param  integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }

    /**
     * Gets offset.
     *
     * @param  integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }

    /**
     * Sets value based on offset.
     *
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }

    /**
     * Unsets offset.
     *
     * @param  integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(get_object_vars($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(get_object_vars($this));
        }
    }
}
